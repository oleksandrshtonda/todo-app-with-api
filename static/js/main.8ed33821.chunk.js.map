{"version":3,"sources":["utils/fetchClient.ts","components/TodoItem/TodoItem.tsx","types/Status.ts","components/TodoFilter/TodoFilter.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["request","url","delay","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","client","TodoItem","_ref","todo","onDelete","onUpdate","areAllCompletedDeleting","areAllToggling","areAllCompleted","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isEditing","setIsEditing","_useState5","title","_useState6","editInputValue","setEditInputValue","editInputRef","useRef","showLoader","completed","useEffect","_editInputRef$current","current","focus","deleteTodo","id","finally","updateTodo","saveTodo","trimmedValue","trim","_objectSpread","_jsxs","className","classNames","children","_jsx","type","checked","onChange","onSubmit","event","preventDefault","ref","placeholder","value","e","target","onBlur","onKeyUp","key","_Fragment","onDoubleClick","onClick","Status","Filter","activeFilter","setActiveFilter","isItActiveFilter","filter","handleClick","href","selected","All","Active","Completed","App","todos","setTodos","visibleTodos","setVisibleTodos","tempTodo","setTempTodo","_useState7","_useState8","_useState9","_useState10","hasError","setHasError","_useState11","_useState12","errorMessage","setErrorMessage","_useState13","_useState14","inputValue","setInputValue","_useState15","_useState16","_useState17","_useState18","wasThereAdding","setWasThereAdding","_useState19","_useState20","setAreAllCompletedDeleting","_useState21","_useState22","setAreAllToggling","completedExist","inputRef","errorTimeoutID","handleError","message","window","userId","concat","catch","clearTimeout","_inputRef$current","todoId","receivedTodo","map","active","promiseArray","all","_toConsumableArray","disabled","hidden","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8ed33821.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  areAllCompletedDeleting: boolean,\n  areAllToggling: boolean,\n  areAllCompleted: boolean,\n  todo: Todo,\n  onDelete: (\n    todoId: number,\n  ) => Promise<void>,\n  onUpdate: (todoId: number, data: Todo) => Promise<void>,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onDelete,\n  onUpdate,\n  areAllCompletedDeleting,\n  areAllToggling,\n  areAllCompleted,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editInputValue, setEditInputValue] = useState(todo.title);\n\n  const editInputRef = useRef<HTMLInputElement>(null);\n\n  const showLoader = isLoading\n    || (areAllCompletedDeleting && todo.completed)\n    || (areAllToggling && !todo.completed)\n    || (areAllToggling && areAllCompleted);\n\n  useEffect(() => {\n    if (isEditing) {\n      editInputRef.current?.focus();\n    }\n  }, [isEditing]);\n\n  const deleteTodo = () => {\n    setIsLoading(true);\n\n    onDelete(todo.id)\n      .finally(() => setIsLoading(false));\n  };\n\n  const updateTodo = (data: Todo) => {\n    setIsLoading(true);\n\n    onUpdate(todo.id, data)\n      .finally(() => setIsLoading(false));\n  };\n\n  const toggleTodo = () => {\n    updateTodo({ ...todo, completed: !todo.completed });\n  };\n\n  const saveTodo = () => {\n    const trimmedValue = editInputValue.trim();\n\n    if (trimmedValue === todo.title) {\n      setEditInputValue(trimmedValue);\n\n      return;\n    }\n\n    if (!trimmedValue) {\n      deleteTodo();\n\n      return;\n    }\n\n    updateTodo({ ...todo, title: trimmedValue });\n    setEditInputValue(trimmedValue);\n  };\n\n  const handleEditingFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    saveTodo();\n    setIsEditing(false);\n  };\n\n  const handleEditInputKeyUp = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    if (event.key === 'Escape') {\n      setEditInputValue(todo.title);\n      setIsEditing(false);\n    }\n  };\n\n  const handleEditInputBlur = () => {\n    saveTodo();\n    setIsEditing(false);\n  };\n\n  return (\n    <div\n      className={classNames('todo', {\n        completed: todo.completed,\n      })}\n      data-cy=\"Todo\"\n    >\n      <div\n        className={classNames('modal overlay', {\n          'is-active': showLoader,\n        })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onChange={toggleTodo}\n        />\n      </label>\n\n      {isEditing ? (\n        <form\n          onSubmit={handleEditingFormSubmit}\n        >\n          <input\n            ref={editInputRef}\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={editInputValue}\n            onChange={e => setEditInputValue(e.target.value)}\n            onBlur={handleEditInputBlur}\n            onKeyUp={handleEditInputKeyUp}\n          />\n        </form>\n      ) : (\n        <>\n          <span\n            className=\"todo__title\"\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            {todo.title}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={deleteTodo}\n          >\n            ×\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","export enum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  activeFilter: Status,\n  setActiveFilter: (value: Status) => void,\n};\n\nexport const Filter: React.FC<Props> = ({ activeFilter, setActiveFilter }) => {\n  const isItActiveFilter = (filter: Status) => activeFilter === filter;\n\n  const handleClick = (filter: Status) => {\n    if (filter !== activeFilter) {\n      setActiveFilter(filter);\n    }\n  };\n\n  return (\n    <nav className=\"filter\">\n      <a\n        href=\"#/\"\n        className={classNames('filter__link', {\n          selected: isItActiveFilter(Status.All),\n        })}\n        onClick={() => handleClick(Status.All)}\n      >\n        {Status.All}\n      </a>\n\n      <a\n        href=\"#/active\"\n        className={classNames('filter__link', {\n          selected: isItActiveFilter(Status.Active),\n        })}\n        onClick={() => handleClick(Status.Active)}\n      >\n        {Status.Active}\n      </a>\n\n      <a\n        href=\"#/completed\"\n        className={classNames('filter__link', {\n          selected: isItActiveFilter(Status.Completed),\n        })}\n        onClick={() => handleClick(Status.Completed)}\n      >\n        {Status.Completed}\n      </a>\n    </nav>\n  );\n};\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable max-len */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from './types/Todo';\nimport { client } from './utils/fetchClient';\nimport { TodoItem } from './components/TodoItem';\nimport { Status } from './types/Status';\nimport { Filter } from './components/TodoFilter';\nimport { addTodos, getTodos } from './api/todos';\n\nconst USER_ID = 11396;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n\n  const [activeFilter, setActiveFilter] = useState(Status.All);\n\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [wasThereAdding, setWasThereAdding] = useState(false);\n  const [areAllCompletedDeleting, setAreAllCompletedDeleting] = useState(false);\n  const [areAllToggling, setAreAllToggling] = useState(false);\n\n  const completedExist = !!todos.filter(todo => todo.completed).length;\n  const areAllCompleted = todos.filter(todo => !todo.completed).length === 0;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const errorTimeoutID = useRef(0);\n\n  const handleError = (message: string) => {\n    setHasError(true);\n    setErrorMessage(message);\n    errorTimeoutID.current = window.setTimeout(() => {\n      setHasError(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (hasError) {\n      setHasError(false);\n    }\n\n    getTodos(USER_ID)\n      .then(data => {\n        setTodos(data);\n      })\n      .catch(() => handleError('Unable to load todos'));\n\n    return () => window.clearTimeout(errorTimeoutID.current);\n  }, [activeFilter, todos]);\n\n  useEffect(() => {\n    if (wasThereAdding) {\n      inputRef.current?.focus();\n    }\n  }, [wasThereAdding]);\n\n  useEffect(() => {\n    switch (activeFilter) {\n      case Status.Active:\n        setVisibleTodos(todos.filter(todo => !todo.completed));\n        break;\n\n      case Status.Completed:\n        setVisibleTodos(todos.filter(todo => todo.completed));\n        break;\n\n      default:\n        setVisibleTodos(todos);\n    }\n  }, [activeFilter, todos]);\n\n  const addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    window.clearTimeout(errorTimeoutID.current);\n\n    if (!inputValue.trim()) {\n      handleError(\"Title can't be empty\");\n\n      return;\n    }\n\n    const data = {\n      title: inputValue.trim(),\n      userId: USER_ID,\n      completed: false,\n    };\n\n    setTempTodo({ id: 0, ...data });\n    setWasThereAdding(false);\n    setIsLoading(true);\n\n    addTodos(data)\n      .then(response => {\n        setTodos([...todos, response]);\n        setInputValue('');\n      })\n      .catch(() => handleError('Unable to add a todo'))\n      .finally(() => {\n        setTempTodo(null);\n        setWasThereAdding(true);\n        setIsLoading(false);\n      });\n  };\n\n  const deleteTodo = (todoId: number) => {\n    return client.delete(`/todos/${todoId}`)\n      .then(() => setTodos(todos.filter(todo => todo.id !== todoId)))\n      .catch(() => handleError('Unable to delete a todo'));\n  };\n\n  const deleteAllCompleted = () => {\n    setAreAllCompletedDeleting(true);\n\n    Promise.all(todos.filter(todo => todo.completed).map(todo => client.delete(`/todos/${todo.id}`)))\n      .then(() => setTodos(todos.filter(todo => !todo.completed)))\n      .catch(() => handleError('Unable to delete todos'))\n      .finally(() => setAreAllCompletedDeleting(false));\n  };\n\n  const updateTodo = (todoId: number, data: Todo) => {\n    return client.patch<Todo>(`/todos/${todoId}`, data)\n      .then(receivedTodo => {\n        setTodos(todos.map(todo => {\n          return todo.id === todoId ? receivedTodo : todo;\n        }));\n      })\n      .catch(() => handleError('Unable to update a todo'));\n  };\n\n  const toggleAll = () => {\n    const promiseArray = (areAllCompleted ? todos.filter(todo => todo.completed) : todos.filter(todo => !todo.completed))\n      .map(todo => client.patch(`/todos/${todo.id}`, { completed: !todo.completed }));\n\n    setAreAllToggling(true);\n\n    Promise.all(promiseArray)\n      .then(() => {\n        setTodos(todos.map(todo => (\n          { ...todo, completed: !areAllCompleted }\n        )));\n      })\n      .catch(() => handleError('Unable to toggle todos'))\n      .finally(() => setAreAllToggling(false));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          <button\n            type=\"button\"\n            className={classNames('todoapp__toggle-all', {\n              active: areAllCompleted,\n            })}\n            onClick={toggleAll}\n          />\n\n          <form\n            onSubmit={addTodo}\n          >\n            <input\n              ref={inputRef}\n              type=\"text\"\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={inputValue}\n              onChange={e => setInputValue(e.target.value)}\n              disabled={isLoading}\n              onBlur={() => setWasThereAdding(false)}\n            />\n          </form>\n        </header>\n\n        <section className=\"todoapp__main\">\n          {visibleTodos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              onDelete={deleteTodo}\n              onUpdate={updateTodo}\n              areAllCompletedDeleting={areAllCompletedDeleting}\n              areAllToggling={areAllToggling}\n              areAllCompleted={areAllCompleted}\n            />\n          ))}\n\n          {tempTodo && (\n            <div className=\"todo\">\n              <label className=\"todo__status-label\">\n                <input type=\"checkbox\" className=\"todo__status\" />\n              </label>\n\n              <span className=\"todo__title\">{tempTodo.title}</span>\n              <button type=\"button\" className=\"todo__remove\">×</button>\n\n              <div className=\"modal overlay is-active\">\n                <div className=\"modal-background has-background-white-ter\" />\n                <div className=\"loader\" />\n              </div>\n            </div>\n          )}\n        </section>\n\n        {todos.length > 0 && (\n          <footer className=\"todoapp__footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.completed).length} items left`}\n            </span>\n\n            <Filter\n              activeFilter={activeFilter}\n              setActiveFilter={setActiveFilter}\n            />\n\n            <button\n              type=\"button\"\n              className=\"todoapp__clear-completed\"\n              disabled={!completedExist}\n              onClick={deleteAllCompleted}\n            >\n              Clear completed\n            </button>\n          </footer>\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          'notification is-danger is-light has-text-weight-normal',\n          { hidden: !hasError },\n        )}\n        data-cy=\"ErrorNotification\"\n      >\n        <button\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setHasError(false)}\n        />\n\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodos = (todo: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', todo);\n};\n\nexport const deletePost = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const updateTodos = (todo: Omit<Todo, 'id'>) => {\n  return client.patch<Todo>('/todos', todo);\n};\n","import { createRoot } from 'react-dom/client';\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<App />);\n"],"sourceRoot":""}